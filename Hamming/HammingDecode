def decode_hamming(hamming_code):
    n = len(hamming_code)
    r = 0
    while (2**r < n + 1):
        r += 1
    error_pos = 0
    for i in range(r):
        parity = 0
        for j in range(1, n + 1):
            if ((j >> i) & 1) == 1:
                parity ^= int(hamming_code[j - 1])
        if parity != 0:
            error_pos += 2**i
    if error_pos != 0:
        print(f"Se detectaron y corrigieron errores en la posici√≥n {error_pos}.")
        hamming_code[error_pos - 1] = '1' if hamming_code[error_pos - 1] == '0' else '0'
    original_message = [hamming_code[i - 1] for i in range(1, n + 1) if (i & (i - 1)) != 0]
    return ''.join(original_message)

if __name__ == "__main__":
    hamming_code = input("Ingrese el mensaje codificado: ")
    decoded_message = decode_hamming(list(hamming_code))
    print(f"Mensaje decodificado: {decoded_message}")
